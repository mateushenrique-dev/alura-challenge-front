{"ast":null,"code":"/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n  return re.source;\n}\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\n\n\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\n\n\nfunction concat(...args) {\n  const joined = args.map(x => source(x)).join(\"\");\n  return joined;\n}\n/*\nLanguage: Nginx config\nAuthor: Peter Leonov <gojpeg@yandex.ru>\nContributors: Ivan Sagalaev <maniac@softwaremaniacs.org>\nCategory: config, web\nWebsite: https://www.nginx.com\n*/\n\n/** @type LanguageFn */\n\n\nfunction nginx(hljs) {\n  const VAR = {\n    className: 'variable',\n    variants: [{\n      begin: /\\$\\d+/\n    }, {\n      begin: /\\$\\{\\w+\\}/\n    }, {\n      begin: concat(/[$@]/, hljs.UNDERSCORE_IDENT_RE)\n    }]\n  };\n  const LITERALS = [\"on\", \"off\", \"yes\", \"no\", \"true\", \"false\", \"none\", \"blocked\", \"debug\", \"info\", \"notice\", \"warn\", \"error\", \"crit\", \"select\", \"break\", \"last\", \"permanent\", \"redirect\", \"kqueue\", \"rtsig\", \"epoll\", \"poll\", \"/dev/poll\"];\n  const DEFAULT = {\n    endsWithParent: true,\n    keywords: {\n      $pattern: /[a-z_]{2,}|\\/dev\\/poll/,\n      literal: LITERALS\n    },\n    relevance: 0,\n    illegal: '=>',\n    contains: [hljs.HASH_COMMENT_MODE, {\n      className: 'string',\n      contains: [hljs.BACKSLASH_ESCAPE, VAR],\n      variants: [{\n        begin: /\"/,\n        end: /\"/\n      }, {\n        begin: /'/,\n        end: /'/\n      }]\n    }, // this swallows entire URLs to avoid detecting numbers within\n    {\n      begin: '([a-z]+):/',\n      end: '\\\\s',\n      endsWithParent: true,\n      excludeEnd: true,\n      contains: [VAR]\n    }, {\n      className: 'regexp',\n      contains: [hljs.BACKSLASH_ESCAPE, VAR],\n      variants: [{\n        begin: \"\\\\s\\\\^\",\n        end: \"\\\\s|\\\\{|;\",\n        returnEnd: true\n      }, // regexp locations (~, ~*)\n      {\n        begin: \"~\\\\*?\\\\s+\",\n        end: \"\\\\s|\\\\{|;\",\n        returnEnd: true\n      }, // *.example.com\n      {\n        begin: \"\\\\*(\\\\.[a-z\\\\-]+)+\"\n      }, // sub.example.*\n      {\n        begin: \"([a-z\\\\-]+\\\\.)+\\\\*\"\n      }]\n    }, // IP\n    {\n      className: 'number',\n      begin: '\\\\b\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}(:\\\\d{1,5})?\\\\b'\n    }, // units\n    {\n      className: 'number',\n      begin: '\\\\b\\\\d+[kKmMgGdshdwy]?\\\\b',\n      relevance: 0\n    }, VAR]\n  };\n  return {\n    name: 'Nginx config',\n    aliases: ['nginxconf'],\n    contains: [hljs.HASH_COMMENT_MODE, {\n      beginKeywords: \"upstream location\",\n      end: /;|\\{/,\n      contains: DEFAULT.contains,\n      keywords: {\n        section: \"upstream location\"\n      }\n    }, {\n      className: 'section',\n      begin: concat(hljs.UNDERSCORE_IDENT_RE + lookahead(/\\s+\\{/)),\n      relevance: 0\n    }, {\n      begin: lookahead(hljs.UNDERSCORE_IDENT_RE + '\\\\s'),\n      end: ';|\\\\{',\n      contains: [{\n        className: 'attribute',\n        begin: hljs.UNDERSCORE_IDENT_RE,\n        starts: DEFAULT\n      }],\n      relevance: 0\n    }],\n    illegal: '[^\\\\s\\\\}\\\\{]'\n  };\n}\n\nmodule.exports = nginx;","map":{"version":3,"sources":["/home/mateus/Documents/Projects/alura-challenge/node_modules/highlight.js/lib/languages/nginx.js"],"names":["source","re","lookahead","concat","args","joined","map","x","join","nginx","hljs","VAR","className","variants","begin","UNDERSCORE_IDENT_RE","LITERALS","DEFAULT","endsWithParent","keywords","$pattern","literal","relevance","illegal","contains","HASH_COMMENT_MODE","BACKSLASH_ESCAPE","end","excludeEnd","returnEnd","name","aliases","beginKeywords","section","starts","module","exports"],"mappings":"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","sourcesContent":["/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: Nginx config\nAuthor: Peter Leonov <gojpeg@yandex.ru>\nContributors: Ivan Sagalaev <maniac@softwaremaniacs.org>\nCategory: config, web\nWebsite: https://www.nginx.com\n*/\n\n/** @type LanguageFn */\nfunction nginx(hljs) {\n  const VAR = {\n    className: 'variable',\n    variants: [\n      {\n        begin: /\\$\\d+/\n      },\n      {\n        begin: /\\$\\{\\w+\\}/\n      },\n      {\n        begin: concat(/[$@]/, hljs.UNDERSCORE_IDENT_RE)\n      }\n    ]\n  };\n  const LITERALS = [\n    \"on\",\n    \"off\",\n    \"yes\",\n    \"no\",\n    \"true\",\n    \"false\",\n    \"none\",\n    \"blocked\",\n    \"debug\",\n    \"info\",\n    \"notice\",\n    \"warn\",\n    \"error\",\n    \"crit\",\n    \"select\",\n    \"break\",\n    \"last\",\n    \"permanent\",\n    \"redirect\",\n    \"kqueue\",\n    \"rtsig\",\n    \"epoll\",\n    \"poll\",\n    \"/dev/poll\"\n  ];\n  const DEFAULT = {\n    endsWithParent: true,\n    keywords: {\n      $pattern: /[a-z_]{2,}|\\/dev\\/poll/,\n      literal: LITERALS\n    },\n    relevance: 0,\n    illegal: '=>',\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      {\n        className: 'string',\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          VAR\n        ],\n        variants: [\n          {\n            begin: /\"/,\n            end: /\"/\n          },\n          {\n            begin: /'/,\n            end: /'/\n          }\n        ]\n      },\n      // this swallows entire URLs to avoid detecting numbers within\n      {\n        begin: '([a-z]+):/',\n        end: '\\\\s',\n        endsWithParent: true,\n        excludeEnd: true,\n        contains: [ VAR ]\n      },\n      {\n        className: 'regexp',\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          VAR\n        ],\n        variants: [\n          {\n            begin: \"\\\\s\\\\^\",\n            end: \"\\\\s|\\\\{|;\",\n            returnEnd: true\n          },\n          // regexp locations (~, ~*)\n          {\n            begin: \"~\\\\*?\\\\s+\",\n            end: \"\\\\s|\\\\{|;\",\n            returnEnd: true\n          },\n          // *.example.com\n          {\n            begin: \"\\\\*(\\\\.[a-z\\\\-]+)+\"\n          },\n          // sub.example.*\n          {\n            begin: \"([a-z\\\\-]+\\\\.)+\\\\*\"\n          }\n        ]\n      },\n      // IP\n      {\n        className: 'number',\n        begin: '\\\\b\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}(:\\\\d{1,5})?\\\\b'\n      },\n      // units\n      {\n        className: 'number',\n        begin: '\\\\b\\\\d+[kKmMgGdshdwy]?\\\\b',\n        relevance: 0\n      },\n      VAR\n    ]\n  };\n\n  return {\n    name: 'Nginx config',\n    aliases: [ 'nginxconf' ],\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      {\n        beginKeywords: \"upstream location\",\n        end: /;|\\{/,\n        contains: DEFAULT.contains,\n        keywords: {\n          section: \"upstream location\"\n        }\n      },\n      {\n        className: 'section',\n        begin: concat(hljs.UNDERSCORE_IDENT_RE + lookahead(/\\s+\\{/)),\n        relevance: 0\n      },\n      {\n        begin: lookahead(hljs.UNDERSCORE_IDENT_RE + '\\\\s'),\n        end: ';|\\\\{',\n        contains: [\n          {\n            className: 'attribute',\n            begin: hljs.UNDERSCORE_IDENT_RE,\n            starts: DEFAULT\n          }\n        ],\n        relevance: 0\n      }\n    ],\n    illegal: '[^\\\\s\\\\}\\\\{]'\n  };\n}\n\nmodule.exports = nginx;\n"]},"metadata":{},"sourceType":"script"}