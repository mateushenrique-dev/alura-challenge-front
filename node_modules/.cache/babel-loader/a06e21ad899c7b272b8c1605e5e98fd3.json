{"ast":null,"code":"var _jsxFileName = \"/home/mateus/Documents/Projects/alura-challenge/src/contexts/ConfProject.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConfProject = /*#__PURE__*/React.createContext();\nexport function ConfProjectContext(props) {\n  _s();\n\n  const codeFieldRef = useRef(null);\n  const MenuRef = useRef(null);\n  const comunityTabRef = useRef(null);\n  const codeTabRef = useRef(null);\n  const [codes, setCodes] = useState([]);\n\n  function setDados(dados) {\n    const newDados = [...codes, dados];\n    setCodes(newDados);\n    localStorage.setItem('Dados', newDados);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ConfProject.Provider, {\n    value: {\n      codeFieldRef,\n      MenuRef,\n      setDados,\n      codes,\n      comunityTabRef,\n      codeTabRef\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ConfProjectContext, \"yPUh94h4QO2OeL4k9Y+SqM1tJ28=\");\n\n_c = ConfProjectContext;\nexport default ConfProject;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfProjectContext\");","map":{"version":3,"sources":["/home/mateus/Documents/Projects/alura-challenge/src/contexts/ConfProject.js"],"names":["React","useState","useRef","ConfProject","createContext","ConfProjectContext","props","codeFieldRef","MenuRef","comunityTabRef","codeTabRef","codes","setCodes","setDados","dados","newDados","localStorage","setItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;;AAEA,MAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAN,EAApB;AAEA,OAAO,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AAAA;;AAExC,QAAMC,YAAY,GAAGL,MAAM,CAAC,IAAD,CAA3B;AACA,QAAMM,OAAO,GAAGN,MAAM,CAAC,IAAD,CAAtB;AACA,QAAMO,cAAc,GAAGP,MAAM,CAAC,IAAD,CAA7B;AACA,QAAMQ,UAAU,GAAGR,MAAM,CAAC,IAAD,CAAzB;AAEA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;;AAEA,WAASY,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,UAAMC,QAAQ,GAAG,CAAC,GAAGJ,KAAJ,EAAWG,KAAX,CAAjB;AACAF,IAAAA,QAAQ,CAACG,QAAD,CAAR;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,QAA9B;AACD;;AAED,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAER,MAAAA,YAAF;AAAgBC,MAAAA,OAAhB;AAAyBK,MAAAA,QAAzB;AAAmCF,MAAAA,KAAnC;AAA0CF,MAAAA,cAA1C;AAA0DC,MAAAA;AAA1D,KAA7B;AAAA,cACGJ,KAAK,CAACY;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GApBeb,kB;;KAAAA,kB;AAsBhB,eAAeF,WAAf","sourcesContent":["import React, { useState, useRef } from 'react';\n\nconst ConfProject = React.createContext();\n\nexport function ConfProjectContext(props) {\n\n  const codeFieldRef = useRef(null);\n  const MenuRef = useRef(null);\n  const comunityTabRef = useRef(null);\n  const codeTabRef = useRef(null);\n\n  const [codes, setCodes] = useState([]);\n\n  function setDados(dados) {\n    const newDados = [...codes, dados]\n    setCodes(newDados)\n    localStorage.setItem('Dados', newDados)\n  }\n\n  return (\n    <ConfProject.Provider value={{ codeFieldRef, MenuRef, setDados, codes, comunityTabRef, codeTabRef }}>\n      {props.children}\n    </ConfProject.Provider>\n  )\n}\n\nexport default ConfProject;"]},"metadata":{},"sourceType":"module"}