{"ast":null,"code":"var _jsxFileName = \"/home/mateus/Documents/Projects/alura-challenge/src/contexts/ConfProject.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConfProject = /*#__PURE__*/React.createContext();\nconst codeFieldRef = /*#__PURE__*/React.createRef(null);\nconst MenuRef = /*#__PURE__*/React.createRef(null);\nexport function toggleMenu(e) {}\nexport function ConfProjectContext(props) {\n  _s();\n\n  const [codes, setCodes] = useState([]);\n\n  function setDados(dados) {\n    const newDados = [...codes, dados];\n    setCodes(newDados);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ConfProject.Provider, {\n    value: {\n      codeFieldRef,\n      MenuRef,\n      setDados,\n      codes\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ConfProjectContext, \"cyxvNb8udxUjlfv1Oy2XPwlpW+U=\");\n\n_c = ConfProjectContext;\nexport default ConfProject;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfProjectContext\");","map":{"version":3,"sources":["/home/mateus/Documents/Projects/alura-challenge/src/contexts/ConfProject.js"],"names":["React","useState","ConfProject","createContext","codeFieldRef","createRef","MenuRef","toggleMenu","e","ConfProjectContext","props","codes","setCodes","setDados","dados","newDados","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,EAApB;AACA,MAAMC,YAAY,gBAAGJ,KAAK,CAACK,SAAN,CAAgB,IAAhB,CAArB;AACA,MAAMC,OAAO,gBAAGN,KAAK,CAACK,SAAN,CAAgB,IAAhB,CAAhB;AAEA,OAAO,SAASE,UAAT,CAAoBC,CAApB,EAA2B,CAEjC;AAED,OAAO,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AAAA;;AAExC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;;AAEA,WAASY,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,UAAMC,QAAQ,GAAG,CAAC,GAAGJ,KAAJ,EAAWG,KAAX,CAAjB;AACAF,IAAAA,QAAQ,CAACG,QAAD,CAAR;AACD;;AAED,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEX,MAAAA,YAAF;AAAgBE,MAAAA,OAAhB;AAAyBO,MAAAA,QAAzB;AAAmCF,MAAAA;AAAnC,KAA7B;AAAA,cACGD,KAAK,CAACM;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAdeP,kB;;KAAAA,kB;AAgBhB,eAAeP,WAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst ConfProject = React.createContext();\nconst codeFieldRef = React.createRef(null);\nconst MenuRef = React.createRef(null);\n\nexport function toggleMenu(e: '') {\n\n}\n\nexport function ConfProjectContext(props) {\n\n  const [codes, setCodes] = useState([]);\n\n  function setDados(dados) {\n    const newDados = [...codes, dados]\n    setCodes(newDados)\n  }\n\n  return (\n    <ConfProject.Provider value={{ codeFieldRef, MenuRef, setDados, codes }}>\n      {props.children}\n    </ConfProject.Provider>\n  )\n}\n\nexport default ConfProject;"]},"metadata":{},"sourceType":"module"}